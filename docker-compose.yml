services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:cuda
    container_name: openwebui
    ports:
      - "3000:8080"
    volumes:
      - openwebui_data:/app/backend/data  # Persistent storage for OpenWebUI
    environment:
      - WEBUI_ENV=production
      - WEBUI_ENABLE_CONTROLS=true
      - WEBUI_ENABLE_MULTI_USER=true
      - WEBUI_DEFAULT_MODELS=ollama/mistral:7b
      - WEBUI_OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_ALLOW_FILE_UPLOADS=true
      - WEBUI_DISABLE_ANALYTICS=true
      - WEBUI_HIDE_DEFAULT_MODELS=true
      - WEBUI_ENABLE_FILE_UPLOADS=true
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    runtime: nvidia

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app/backend  # Mount backend code (useful for development)
      - ./pptx_files:/app/pptx_files  # Mount PPTX files
    entrypoint: ["/app/entrypoint.sh"]
    depends_on:
      - ollama  # This just ensures Ollama is started, but does not wait for readiness
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_PATH=/app/file_log.db  # Use path inside container
      - FOLDER_PATH=/app/pptx_files  # Use path inside container
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    runtime: nvidia

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama/ollama:/root/.ollama
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    runtime: nvidia

volumes:
  openwebui_data:
  file_log_db:  # Persistent volume for file_log.db