services:
  openwebui:
    image: ghcr.io/open-webui/open-webui:cuda
    container_name: openwebui
    ports:
      - "3000:8080"
    volumes:
      - open-webui:/app/backend/data
    environment:
      - DEFAULT_MODELS=HawkGPT
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_NAME=HawkPartners
      - ENABLE_AUTOCOMPLETE_GENERATION=false
      - ENABLE_RAG_WEB_SEARCH=true
      - RAG_WEB_SEARCH_ENGINE=searchapi
      - SEARCH_API_KEY=gW9NEYWby2vdgsFvJjFPzsv9
      - SEARCHAPI_ENGINE=google
      - ADMIN_EMAIL=jasonandersonjr@me.com
      - WEBUI_SESSION_COOKIE_SAME_SITE=none
      - WEBUI_AUTH_COOKIE_SAME_SITE=none
      - WEBUI_SESSION_COOKIE_SECURE=false
      - WEBUI_AUTH_COOKIE_SECURE=false
    restart: unless-stopped
    runtime: nvidia

  backend:
    image: python:3.10-slim  # Use the Python base image
    container_name: backend
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app/backend  # Mount backend code (useful for development)
      - ./pptx_files:/app/pptx_files  # Mount PPTX files
      - ./entrypoint.sh:/app/entrypoint.sh
      - file_log_db:/app/log:rw  # Persist database folder
    working_dir: /app/backend  # Set the working directory to /app/backend
    entrypoint: ["/bin/bash", "-c", "pip install --no-cache-dir -r requirements.txt && /app/entrypoint.sh"]
    depends_on:
      - ollama  # This just ensures Ollama is started, but does not wait for readiness
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - DATABASE_PATH=/app/log/file_log.db  # Use path inside container
      - FOLDER_PATH=/app/pptx_files  # Use path inside container
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    runtime: nvidia

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama/ollama:/root/.ollama
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    restart: unless-stopped
    runtime: nvidia

volumes:
  open-webui:
  file_log_db:  # Persistent volume for file_log.db